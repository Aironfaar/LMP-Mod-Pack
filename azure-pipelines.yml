# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net
name: $(Date:yy.MM).$(Rev:r)

trigger: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  binariesLocation: '$(Build.SourcesDirectory)/ModManagerSource/ModManager/bin/Release/'
  releaseVersionName: 'release-v$(Build.BuildNumber)-$(Build.SourceBranchName)'
  windowsBinariesArchiveName: '$(releaseVersionName)-winx86x64.zip'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DownloadSecureFile@1
  name: certificate
  inputs:
    secureFile: 'LMPModLoader.pfx'

- script: |
    echo Installing $(certificate.secureFilePath) to the trusted CA directory...
    dir $(Agent.TempDirectory)
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: LMPModLoader.pfx
    TargetFolder: '$(Build.SourcesDirectory)/ModManagerSource/ModManager'


- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(binariesLocation)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(windowsBinariesArchiveName)'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

