#example mod configuration file:
#lines starting with "#" are ignored altogether

ModName=LMP - ExampleSelectiveOverwriteMod
ModDesc=This is the example selective overwrite mod, it overwrites ExampleMod, and must be loaded after it.

#which files to load from the mod directory/PBS, currently only pokemon, moves, items, tms and abilities are supported. comma separated list.
ModPBS=pokemon

#the default order in which to load mods, 1=pre, 2=main, 3=post
#big content mods should generally use 0, small mods should use 1 and mods that mod other mods should use 2
defaultLoadOrder=3

#if true, mod will be loaded
enabled=true

#this line decides whether to append tms to the existing list (define only the pokemon that you want to add or remove from each tm in the tms.txt if so),
#use !INTERNALID to remove and INTENALID to add a pokemon to a tm
#if this is true just use a normal tms.txt, in that case you must include the compatibility list for ALL pokemon,
#only use this when making a big content mod (for example updating all the tms to gen 8), and defaultLoadOrder should also be set to 1 for best results
#not implemented yet!!
forceOverwriteTMS=false

#for smaller mods, if this setting is set to "true" it will disable adding new pokemon, but will only overwrite keys that exist in pokemon.txt, for example, if only
#level up move overwrites are defined in your pokemon.txt, it can be loaded after another mod which edits the same pokemon, and will only overwrite moves.
selectiveOverwrite=true

#this setting is to ignore added pokemon in pokemon.txt, and only overwrite. it only does anything if selectiveOverwrite is enabled.
#if this isn't enabled and your pokemon.txt has pokemon that don't exist in the game, it will throw an error.
#it is used to make a mod that only overwrites a pokemon if it already exists, and does nothing if it doesn't. useful for conditionally overwriting other mods.
ignoreNewPokemon=true

#whether the mod has scripts, true = load all .rb files inside the mod folder or false (or anything else) = don't load any .rb files
hasScripts=true

#custom options can be defined here, it must be defined as key=value.
#if it contains at least one comma it will be stored as an array, if its a number it will be stored as an int and everything else will be stored as a string